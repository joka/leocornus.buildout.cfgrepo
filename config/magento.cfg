####################################################################
# buildout config to download and build magento 
#
# DEPENDENCE mysql_build php_build supervisor
#
####################################################################

[settings]
www-directory = ${buildout:directory}/var/www

[src-versions]
magento = 1.7.0.2

[mysql-cnf]
database_name = magento
user = root
user_password = secret

   
[magento-build]
recipe = hexagonit.recipe.download
url =  file://${buildout:directory}/downloads/magento-${src-versions:magento}.tar.gz
destination = ${settings:www-directory}
ignore-existing = true
strip-top-level-dir = true


 
[magento-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true 
php_command = ${php-build:location}/bin/php
cmds = 
    ${:php_command} -f ${magento-build:destination}/install.php  -- \
    --license_agreement_accepted "yes" \
    --locale "${magento-conf:locale}" \
    --timezone "Europe/Zurich" \
    --default_currency "${magento-conf:currency}" \
    --db_host "${mysql-cnf:socket}" \
    --db_name "${mysql-cnf:database_name}" \
    --db_user "${mysql-cnf:user}" \
    --db_pass "${mysql-cnf:user_password}" \
    --url "${magento-conf:global_baseurl}" \
    --use_rewrites "yes" \
    --use_secure "yes" \
    --secure_base_url "${magento-conf:global_secure_baseurl}" \
    --use_secure_admin "yes" \
    --admin_firstname "System" \
    --admin_lastname "Admin" \
    --admin_email "${magento-conf:admin_email}" \
    --admin_username "${magento-conf:admin_name}" \
    --admin_password "${magento-conf:admin_password}" \
    --session_save "db" 

[magento-conf]
#gennerate local.xml
recipe = collective.recipe.genshi
input = ${buildout:directory}/cfgrepo/template/magento_local.xml.in
output = ${buildout:directory}/var/www/app/etc/local.xml
admin_name = admin
admin_password = secretsecret1
admin_email = joka@jokasis.de
currency = CHF
locale = de_CH
global_baseurl = http://127.0.0.1:${ports:nginx}
global_secure_baseurl = http://127.0.0.1:${ports:nginx}
stores_conf = 
    ${magento_store_default:store_conf}

[magento_common_conf]
store_common = 
    <dev>
        <!--modman needs this setting -->
        <template>
            <allow_symlink>1</allow_symlink>
        </template>
    </dev>


[magento_development_common_conf]
store_common =
    <dev>
        <log>
            <active>1</active>
            <file>system.log</file>
            <exception_file>exception.log</exception_file>
        </log>
        <js>
            <merge_files>0</merge_files>
        </js>
        <css>
            <merge_css_files>0</merge_css_files>
        </css>
    </dev>

[magento_store_default]
baseurl = http://127.0.0.1:${ports:nginx}
secure_baseurl = http://127.0.0.1:${ports:nginx}
store_conf =
    <default>
        ${magento_common_conf:store_common}
        ${magento_development_common_conf:store_common} 
        <web>
            <secure>
                <base_url>${:baseurl}</base_url>
            </secure> 
            <unsecure>
                <base_url>${:secure_baseurl}</base_url>
            </unsecure>
        </web>    
    </default>     
 
[modman-build]
# Tool to link magento modules
# https://github.com/colinmollenhour/modman
recipe = hexagonit.recipe.download
url =  https://github.com/colinmollenhour/modman/archive/master.zip
destination = ${buildout:download-cache}/modman
strip-top-level-dir = true
ignore-existing = true
excludes =
     modman-master/bash_completition
     modman-master/composer_json
     modman-master/modman_installer
     modman-master/README.md
 
[modman-bin]
recipe = collective.recipe.template
project_path = ${buildout:directory}/var/www
input = inline:
   #!/bin/bash
    [ !  -d ${:project_path}/.modman ]  && mkdir ${:project_path}/.modman
   cd ${:project_path}/ && ${modman-build:destination}/modman $@ 
output = ${buildout:directory}/bin/modman_project
mode = 700
