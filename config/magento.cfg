####################################################################
# buildout config to download and build magento 
#
# DEPENDENCE mysql_build php_build supervisor
#
####################################################################

[settings]
www-directory = ${buildout:directory}/var/www

[src-versions]
magento = 1.7.0.2

[mysql-cnf]
database_name = magento
user = root
user_password = secret

   
[magento-build]
recipe = hexagonit.recipe.download
url =  file://${buildout:directory}/downloads/magento-${src-versions:magento}.tar.gz
destination = ${settings:www-directory}
ignore-existing = false
strip-top-level-dir = true

 
[magento-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true 
php_command = ${php-build:location}/bin/php
cmds = 
    if [ -f ${magento-build:destination}/install.php ]; then
        ${:php_command} -f ${magento-build:destination}/install.php  -- \
        --license_agreement_accepted "yes" \
        --locale "${magento-conf:locale}" \
        --timezone "Europe/Berlin" \
        --default_currency "${magento-conf:currency}" \
        --db_host "${mysql-cnf:socket}" \
        --db_name "${mysql-cnf:database_name}" \
        --db_user "${mysql-cnf:user}" \
        --db_pass "${mysql-cnf:user_password}" \
        --url "${magento-conf:global_baseurl}" \
        --use_rewrites "yes" \
        --use_secure "yes" \
        --secure_base_url "${magento-conf:global_secure_baseurl}" \
        --skip_url_validation "yes" \
        --use_secure_admin "yes" \
        --admin_firstname "System" \
        --admin_lastname "Admin" \
        --admin_email "${magento-conf:admin_email}" \
        --admin_username "${magento-conf:admin_name}" \
        --admin_password "${magento-conf:admin_password}" \
        --session_save "db" 
    
       rm ${magento-build:destination}/install.php
    fi

[magento-conf]
#gennerate local.xml
recipe = collective.recipe.genshi
input = ${buildout:directory}/cfgrepo/template/magento_local.xml.in
output = ${buildout:directory}/var/www/app/etc/local.xml
admin_name = admin
admin_password = secretsecret1
admin_email = joka@jokasis.de
currency = CHF
locale = de_CH
global_baseurl = http://127.0.0.1:${ports:nginx}
global_secure_baseurl = http://127.0.0.1:${ports:nginx}
websites_conf = 
  ${website_base:conf}
stores_conf = 
  ${store_default:conf}

[base_conf_template]
scopename = 
baseurl = 
secure_baseurl =  
conf_includes = 
conf =
  <${:scopename}>
      ${:conf_includes}
      <web>
          <secure>
              <base_url>${:baseurl}</base_url>
          </secure> 
          <unsecure>
              <base_url>${:secure_baseurl}</base_url>
          </unsecure>
      </web>    
  </${:scopename}>     

[common_conf]
conf = 
  <dev>
      <!--modman needs this setting -->
      <template>
          <allow_symlink>1</allow_symlink>
      </template>
  </dev>

[development_conf]
conf =
  <dev>
      <log>
          <active>1</active>
          <file>system.log</file>
          <exception_file>exception.log</exception_file>
      </log>
      <js>
          <merge_files>0</merge_files>
      </js>
      <css>
          <merge_css_files>0</merge_css_files>
      </css>
  </dev>

[website_base]
<= base_conf_template  
scopename = base
baseurl = ${magento-conf:global_baseurl}
secure_baseurl = ${magento-conf:global_secure_baseurl} 
conf_includes =   
  ${common_conf:conf}
  ${development_conf:conf} 

[store_default]
conf =   
  <default>
    <dev>
      <js>
          <merge_files>1</merge_files>
      </js>
    </dev>   
  </default>

[magento-update-conf-bin]
recipe = collective.recipe.template
project_path = ${buildout:directory}/var/www
input = inline:
   #!/bin/bash
   ${buildout:directory}/bin/buildout install magento-conf
   ${wiz-bin:output} cache-clear
output = ${buildout:directory}/bin/magento-update-conf
mode = 700

[modman-build]
# Tool to link magento modules
# https://github.com/colinmollenhour/modman
recipe = hexagonit.recipe.download
url =  https://github.com/colinmollenhour/modman/archive/master.zip
destination = ${buildout:download-cache}/modman
strip-top-level-dir = true
ignore-existing = true
excludes =
     modman-master/bash_completition
     modman-master/composer_json
            i ! $X ] &&  continue
     modman-master/modman_installer
     modman-master/README.md
 
[modman-bin]
recipe = collective.recipe.template
project_path = ${buildout:directory}/var/www
input = inline:
   #!/bin/bash
   [ ! -x ${modman-build:destination}/modman ] && chmod a+x ${modman-build:destination}/modman
   [ ! -d ${:project_path}/.modman ]  && mkdir ${:project_path}/.modman
   cd ${:project_path}/ && ${modman-build:destination}/modman $@ 
output = ${buildout:directory}/bin/modman_project
mode = 700

[modman-extensions]
recipe = collective.recipe.cmd
on_install = true
on_update = true 
modman-script = ${modman-bin:output}
clearcache-script = ${wiz-bin:output}
#modman extensions, modman options separated by "|" 
extensions =
    clone|https://github.com/madalinoprea/magneto-debug.git
    clone|https://github.com/IvanChepurnyi/EcomDev_PHPUnit.git
cmds = 
    python -c "
    from subprocess import call
    exts_str = '''${:extensions}'''
    exts = exts_str.split('\n')
    # clone / linke new extensions
    for ext in exts: call(['${:modman-script}'] + ext.split('|'));
    # update existing extensions
    call(['${:modman-script}', 'deploy-all', '--force']); 
    # clear cache
    call(['${:clearcache-script}', 'cache-clear']); 
    "

[wiz-build]
# Magento CLI
# https://github.com/nvahalik/Wiz
recipe = hexagonit.recipe.download
url = https://github.com/nvahalik/Wiz/archive/master.zip 
destination = ${buildout:directory}/bin
strip-top-level-dir = false
ignore-existing = true


[wiz-bin]
recipe = collective.recipe.template
project_path = ${buildout:directory}/var/www
php_path = ${php-build:location}/bin/php
input = inline:
   #!/bin/bash
   export WIZ_PHP_PATH="${:php_path}"
   [ ! -x ${wiz-build:destination}/Wiz-master/wiz ] && chmod a+x ${wiz-build:destination}/Wiz-master/wiz
   cd ${:project_path}/ && ${wiz-build:destination}/Wiz-master/wiz $@
output = ${buildout:directory}/bin/whiz
mode = 700

[mtool-build]
# Magento code generation https://github.com/dankocherga/MTool
recipe = git-recipe
download-directory = ${buildout:directory}/lib/
repository = git://github.com/dankocherga/MTool.git

